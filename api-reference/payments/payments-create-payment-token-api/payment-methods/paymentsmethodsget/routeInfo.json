{"path":"api-reference/payments/payments-create-payment-token-api/payment-methods/paymentsmethodsget","templateID":0,"sharedPropsHashes":{"nav":"ZHaw9F","sidebarTree":"1bVRuv","namespace":"Zd6xn0"},"localProps":{"version":"1.3","crumbs":[{"content":"API Reference","to":"/api-reference"},{"content":"Payments","to":"/api-reference/payments"},{"content":"Payment Token & Payment Methods","to":"/api-reference/payments/payments-create-payment-token-api"},{"content":"Payment Methods","to":"/api-reference/payments/payments-create-payment-token-api/payment-methods"},{"content":"Get Accepted Payment Methods","to":"/api-reference/payments/payments-create-payment-token-api/payment-methods/paymentsmethodsget"}],"page":{"meta":{"title":"Get Accepted Payment Methods - Payment Methods - Payment Token & Payment Methods - Payments - API Reference","url":"/api-reference/payments/payments-create-payment-token-api/payment-methods/paymentsmethodsget","description":"Returns a list of accepted payment methods based on the order_id.\n\nRequired Fields\n\norder_id\n\nAuthorization\n\nOAuth Scopes\n\n\n\nHeaders\n\n\n\nExample\n\n\n\nFor m..."},"title":"Get Accepted Payment Methods","parsedPath":["pages","/api-reference","data","children",1,"data","children",0,"data","children",1,"data","children",0],"rootPagePath":"/api-reference","path":"/api-reference/payments/payments-create-payment-token-api/payment-methods/paymentsmethodsget","isSubpage":true,"route":{"path":"/paymentsmethodsget"},"data":{"blocks":[{"type":"text","data":"Returns a list of accepted payment methods based on the `order_id`.\n\n**Required Fields**\n* order_id","header":{"title":"/payments/methods","subtitle":"Get Accepted Payment Methods","token":"get"}},{"type":"text","data":"## Authorization","config":{"classNames":["ApiOperation--securityTitle mt-10 -mb-10"]}},{"type":"accordion","data":{"children":[{"title":"apiKey - X-Auth-Client","blocks":[{"type":"text","data":"### OAuth Scopes\n|  **UI Name** | **Permission** | **Parameter** |\n| --- | --- | --- |\n|  Create Payments | create | `store_payments_access_token_create` |\n|  Get Payment Methods | read-only | `store_payments_methods_read` |\n\n### Headers\n\n|Header|Parameter|Description|\n|-|-|-|\n|`X-Auth-Client`|`client_id`|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n|`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n\n### Example\n\n```http\nGET /stores/{$$.env.store_hash}/v3/catalog/summary\nhost: api.bigcommerce.com\nContent-Type: application/json\nX-Auth-Client: {client_id}\nX-Auth-Token: {access_token}\n```\n\n* For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication). \n* **Name**: X-Auth-Client\n* **Location**: header"}]},{"title":"apiKey - X-Auth-Token","blocks":[{"type":"text","data":"### OAuth Scopes\n|  **UI Name** | **Permission** | **Parameter** |\n| --- | --- | --- |\n|  Create Payments | create | `store_payments_access_token_create` |\n|  Get Payment Methods | read-only | `store_payments_methods_read` |\n\n### Headers\n\n|Header|Parameter|Description|\n|-|-|-|\n|`X-Auth-Client`|`client_id`|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n|`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n\n### Example\n\n```http\nGET /stores/{$$.env.store_hash}/v3/catalog/summary\nhost: api.bigcommerce.com\nContent-Type: application/json\nX-Auth-Client: {client_id}\nX-Auth-Token: {access_token}\n```\n\n* For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication). \n* **Name**: X-Auth-Token\n* **Location**: header"}]}]},"config":{"classNames":["ApiOperation--security"]}},{"type":"text","data":"## Request Parameters","config":{"classNames":["ApiOperation--requestTitle mt-10 -mb-10"]}},{"type":"accordion","data":{"children":[{"title":"1 Query Parameter","blocks":[{"type":"jsonSchema","data":{"type":"object","properties":{"order_id":{"type":"integer","format":"int32","exclusiveMaximum":false,"exclusiveMinimum":false,"description":"Identifier for the order"}},"required":[]},"config":{"hideRoot":true}}]},{"title":"2 Headers","blocks":[{"type":"jsonSchema","data":{"type":"object","properties":{"Accept":{"type":"string","default":"application/json"},"Content-Type":{"type":"string","default":"application/json"}},"required":[]},"config":{"hideRoot":true}}]}]},"config":{"classNames":["ApiOperation--request"]}},{"type":"text","data":"## Responses","config":{"classNames":["ApiOperation--responsesTitle mt-10 -mb-14"]}},{"type":"tabs","data":{"children":[{"title":"200","blocks":[{"type":"text","data":"Request has been successfully processed"},{"type":"accordion","data":{"children":[{"title":"1 Example","blocks":[{"type":"tabs","data":{"children":[{"title":"application/json","blocks":[{"type":"code","data":"{\n  \"data\": [\n    {\n      \"id\": \"stripe.card\",\n      \"name\": \"Stripe\",\n      \"test_mode\": true,\n      \"type\": \"card\",\n      \"supported_instruments\": [\n        {\n          \"instrument_type\": \"VISA\",\n          \"verification_value_required\": true\n        },\n        {\n          \"instrument_type\": \"MASTERCARD\",\n          \"verification_value_required\": true\n        },\n        {\n          \"instrument_type\": \"AMEX\",\n          \"verification_value_required\": true\n        },\n        {\n          \"instrument_type\": \"DISCOVER\",\n          \"verification_value_required\": true\n        },\n        {\n          \"instrument_type\": \"JCB\",\n          \"verification_value_required\": true\n        },\n        {\n          \"instrument_type\": \"DINERS_CLUB\",\n          \"verification_value_required\": true\n        },\n        {\n          \"instrument_type\": \"STORED_CARD\",\n          \"verification_value_required\": true\n        }\n      ],\n      \"stored_instruments\": [\n        {\n          \"type\": \"stored_card\",\n          \"brand\": \"VISA\",\n          \"expiry_month\": 9,\n          \"expiry_year\": 2020,\n          \"issuer_identification_number\": \"424242\",\n          \"last_4\": \"4242\",\n          \"token\": \"050a1e5c982e5905288ec5ec33f292772762033a0704f46fccb16bf1940b51ef\",\n          \"is_default\": true\n        }\n      ]\n    }\n  ],\n  \"meta\": {}\n}"}]}]}}]},{"title":"Schema","config":{"defaultOpen":true},"blocks":[{"type":"jsonSchema","data":{"title":"Payments Methods Response","type":"object","properties":{"data":{"type":"array","items":{"title":"PaymentMethod","type":"object","properties":{"id":{"description":"Identifier for this payment method","type":"string","minLength":1},"name":{"description":"Name of this payment method","type":"string","minLength":1},"stored_instruments":{"oneOf":[{"title":"Stored Card Instrument","type":"object","properties":{"brand":{"description":"Brand of this card such as VISA or Mastercard","type":"string","minLength":1},"expiry_month":{"description":"Expiry month of this card","type":"integer","minimum":1,"maximum":12,"format":"int32"},"expiry_year":{"description":"Expiry year of this card","type":"integer","format":"int32"},"issuer_identification_number":{"description":"Issuer identification number of this card. This is extracted from the card when the order is payed for.","type":"string","minLength":6,"maxLength":6},"last_4":{"description":"Last four numbers of this card","type":"string","minLength":4,"maxLength":4},"token":{"description":"Identifier representing this stored card. This is used to identify cards within BigCommerce. It is the same as the `payment_access_token` that returns via the [Get Transactions endpoint](https://developer.bigcommerce.com/api-reference/orders/orders-transactions-api/orders/gettransactions).","type":"string","minLength":64,"maxLength":64},"is_default":{"description":"Whether this instrument is a default instrument","example":false,"type":"boolean","default":false},"type":{"description":"Type to classify this stored card","example":"stored_card","type":"string","default":"stored_card"}},"required":["brand","expiry_month","expiry_year","issuer_identification_number","last_4","token","is_default","type"]},{"title":"StoredPaypalAccountInstrument","type":"object","properties":{"email":{"type":"string","format":"email","description":"Email address of this stored account"},"token":{"type":"string","description":"Identifier representing this stored account","minLength":64,"maxLength":64},"is_default":{"type":"boolean","description":"Whether this instrument is a default instrument","default":false},"type":{"type":"string","description":"Type to classify this stored account","enum":["stored_paypal_account"]}},"required":["email","token","is_default","type"]}]},"supported_instruments":{"oneOf":[{"title":"Supported Card Instrument","type":"object","properties":{"instrument_type":{"title":"InstrumentType","description":"Type of this instrument","example":"VISA","type":"string","enum":["VISA","MASTERCARD","DISCOVER","AMEX","DINERS_CLUB","JCB","DANKORT","MAESTRO","STORED_CARD"]},"verification_value_required":{"description":"Whether verification value is required for payment","type":"boolean"}},"required":["instrument_type"]},{"title":"SupportedPaypalAccountInstrument","type":"object","properties":{"instrument_type":{"type":"string","description":"Type of this instrument","enum":["STORED_PAYPAL_ACCOUNT"]}},"required":["instrument_type"]}]},"test_mode":{"description":"Whether this payment method is on test mode","example":false,"type":"boolean","default":false},"type":{"description":"Type to classify this payment method","example":"card","type":"string","default":"card"}},"required":["id","name","supported_instruments","test_mode","type"]}}}}}]}]}}]},{"title":"400","blocks":[{"type":"text","data":"Request has been rejected"},{"type":"accordion","data":{"children":[{"title":"Schema","config":{"defaultOpen":true},"blocks":[{"type":"jsonSchema","data":{"title":"ErrorResponse","type":"object","properties":{"status":{"description":"HTTP status code","type":"integer","format":"int32"},"title":{"description":"Short summary describing the particular error","type":"string"},"detail":{"description":"Detailed summary describing the particular error","type":"string"},"type":{"description":"Reference that identifies the particular error","type":"string"},"code":{"description":"Code representing the particular error","type":"integer","format":"int32"},"errors":{"type":"object","additionalProperties":{"type":"string"}}},"required":["status","title","type"]}}]}]}}]},{"title":"401","blocks":[{"type":"text","data":"Valid authentication required"},{"type":"accordion","data":{"children":[{"title":"Schema","config":{"defaultOpen":true},"blocks":[{"type":"jsonSchema","data":{"title":"ErrorResponse","type":"object","properties":{"status":{"description":"HTTP status code","type":"integer","format":"int32"},"title":{"description":"Short summary describing the particular error","type":"string"},"detail":{"description":"Detailed summary describing the particular error","type":"string"},"type":{"description":"Reference that identifies the particular error","type":"string"},"code":{"description":"Code representing the particular error","type":"integer","format":"int32"},"errors":{"type":"object","additionalProperties":{"type":"string"}}},"required":["status","title","type"]}}]}]}}]},{"title":"404","blocks":[{"type":"text","data":"Request has been rejected due to resource not being found"},{"type":"accordion","data":{"children":[{"title":"Schema","config":{"defaultOpen":true},"blocks":[{"type":"jsonSchema","data":{"title":"ErrorResponse","type":"object","properties":{"status":{"description":"HTTP status code","type":"integer","format":"int32"},"title":{"description":"Short summary describing the particular error","type":"string"},"detail":{"description":"Detailed summary describing the particular error","type":"string"},"type":{"description":"Reference that identifies the particular error","type":"string"},"code":{"description":"Code representing the particular error","type":"integer","format":"int32"},"errors":{"type":"object","additionalProperties":{"type":"string"}}},"required":["status","title","type"]}}]}]}}]},{"title":"422","blocks":[{"type":"text","data":"Request has been rejected due to missing or invalid data"},{"type":"accordion","data":{"children":[{"title":"Schema","config":{"defaultOpen":true},"blocks":[{"type":"jsonSchema","data":{"title":"ErrorResponse","type":"object","properties":{"status":{"description":"HTTP status code","type":"integer","format":"int32"},"title":{"description":"Short summary describing the particular error","type":"string"},"detail":{"description":"Detailed summary describing the particular error","type":"string"},"type":{"description":"Reference that identifies the particular error","type":"string"},"code":{"description":"Code representing the particular error","type":"integer","format":"int32"},"errors":{"type":"object","additionalProperties":{"type":"string"}}},"required":["status","title","type"]}}]}]}}]},{"title":"default","blocks":[{"type":"text","data":"Internal server error"},{"type":"accordion","data":{"children":[{"title":"Schema","config":{"defaultOpen":true},"blocks":[{"type":"jsonSchema","data":{"title":"ErrorResponse","type":"object","properties":{"status":{"description":"HTTP status code","type":"integer","format":"int32"},"title":{"description":"Short summary describing the particular error","type":"string"},"detail":{"description":"Detailed summary describing the particular error","type":"string"},"type":{"description":"Reference that identifies the particular error","type":"string"},"code":{"description":"Code representing the particular error","type":"integer","format":"int32"},"errors":{"type":"object","additionalProperties":{"type":"string"}}},"required":["status","title","type"]}}]}]}}]}]},"config":{"classNames":["ApiOperation--responses"]}},{"type":"text","data":"## Send a Test Request","config":{"classNames":["ApiOperation--tryItOutTitle mt-10 -mb-10"]}},{"type":"http","data":{"method":"get","url":"https://api.bigcommerce.com/stores/{$$.env.store_hash}/v3/payments/methods","headers":{"Accept":"application/json","Content-Type":"application/json","X-Auth-Client":"{$$.env.X-Auth-Client}","X-Auth-Token":"{$$.env.X-Auth-Token}"},"query":{"order_id":""}},"config":{"canvas":false,"paddedInner":false,"classNames":["ApiOperation--tryItOut"]}}],"children":[]}}}}
