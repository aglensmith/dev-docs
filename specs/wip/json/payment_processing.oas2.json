{
    "swagger": "2.0",
    "info": {
        "version": "1.0",
        "title": "Payment Processing",
        "contact": {},
        "description": "This server-to-server endpoint provides the capability to process payment using payment instrument such as credit card.\nSee [Payments Overview](/api-docs/payments/payments-api-overview) for more.\n\nWhile the Try It Now will work, please use other methods of testing for security.",
        "termsOfService": "https://www.bigcommerce.com/terms/api-terms/"
    },
    "host": "payments.bigcommerce.com",
    "basePath": "/stores/{store_hash}",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/payments": {
            "post": {
                "description": "Process a payment on an order.\n\n## Headers\nPayment Access Token:\n- X-Auth-Client\n- X-Auth-Token\n- Content-Type: application/json\n- Accept: application/json\n\nStored Cards/Credit Card:\n- Content-Type: application/json\n- Accept: application/vnd.bc.v1+json\n- Authorization: PAT a-valid-payment-access-token\n\n## Usage Notes\nDepending on merchant's configuration in BigCommerce's Control Panel, the payment request will be processed as either 'Authorize only' or 'Authorize and Capture'.\n\nPayments can be processed using Stored Cards, Payment Tokens or Credit Cards. See [Payments API Overview](/api-docs/payments/payments-api-overview) for more.\n\n## Error Codes\n| Code | Description | Possible Causes | Possible Solutions |\n|-|-|  - |  - |\n| `10000` |  An internal error has occurred within the API. | Connection error | Try the request again. |\n| `10001` | Missing or incorrect required fields. | Missing or Incorrect Fields |  Check the request for any data that is incorrect or is missing |\n| `30000` | Merchant payment configuration could not be found. | * The payment provider has not been configured in the store. | Check the [payment gateways](https://support.bigcommerce.com/s/article/Online-Payment-Methods#setup) settings in your BigCommerce store. |\n| `3001` | Merchant payment configuration is not correctly being configured. | The payment configuration is being rejected by the payment gateway. | Check the [payment gateways](https://support.bigcommerce.com/s/article/Online-Payment-Methods#setup) settings in your BigCommerce store. <br> Reach out the the payment gateway to check the information is correct. |\n| `30002` | Vaulting service is currently not available. |  The vaulting feature is not enabled on this store. | Reach out to the store owner to enable [Stored Credit Cards](https://support.bigcommerce.com/s/article/Enabling-Stored-Credit-Cards) |\n| `30003` | Order could not be found. | The order does not exist. <br> The order ID is not correct. |  Check the current orders in the store using [Get All Orders](https://developer.bigcommerce.com/api-reference/orders/orders-api/orders/getanorder) |\n| `30004` | The validation on line item and grand total does not match. | N/A| Recreate the payment access token <br> Recreate the order <br> Ensure the store settings for taxes and discounts are setup correctly|\n| `30050` | Payment instrument could not be saved. | Credit card information is incorrect. | Check that the card information is correct.<br> * `expiry_month` is two digits<br>* `expiry_year` is four digits |\n| `30051` | The stored card was not found. |  The card requested for payment is not associated to the shopper.| Use [Get Payment Methods](/api-reference/payments/payments-create-payment-token-api/payment-methods/paymentsmethodsget) to see available vaulted cards |\n|`30100` | Payment access token could not be created. | N/A|N/A|\n| `30101` | Order is invalid. | The order is in the wrong status. | Orders must be in Incomplete Status with a `status_id:0` <br>  The order must be created by the Checkout SDK, Checkout API or V2 Orders API. Orders created in the Control and set to an incomplete status will return this error. |\n| `30102` | The payment was declined. | The card information provided was incorrect<br>The token provided was incorrect | Check that the provider shopper information is correct<br>Make sure the token in the Authorization header field is correct |\n| `30103` | Card has expired |N/A | N/A|\n| `30104` | The payment was declined. Please contact card issuer for more information. |N/A |N/A|\n| `30105` | The payment was declined due to duplicate payment being submitted. |N/A |N/A |\n| `30106` | The payment was declined due to insufficient funds. |N/A |N/A|",
                "tags": [
                    "Payment"
                ],
                "operationId": "PaymentsPost",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "description": "Authorization header with a valid payment access token is required to access this endpoint e.g. Authorization: PAT a-valid-payment-access-token"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "description": "",
                        "schema": {
                            "title": "Payment Request",
                            "type": "object",
                            "properties": {
                                "payment": {
                                    "title": "Payment",
                                    "type": "object",
                                    "required": [
                                        "instrument",
                                        "payment_method_id"
                                    ],
                                    "properties": {
                                        "amount": {
                                            "description": "Amount in smallest currency unit",
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "currency_code": {
                                            "description": "Currency code",
                                            "type": "string",
                                            "pattern": "^[A-Z]{3}$"
                                        },
                                        "instrument": {
                                            "oneOf": [
                                                {
                                                    "$ref": "#/definitions/Card"
                                                },
                                                {
                                                    "$ref": "#/definitions/StoredCard"
                                                },
                                                {
                                                    "$ref": "#/definitions/StoredPaypalAccount"
                                                }
                                            ]
                                        },
                                        "payment_method_id": {
                                            "description": "Identifier for payment method that will be used for this payment and `id` from the Get Accepted Payment Methods API",
                                            "type": "string",
                                            "minLength": 1
                                        }
                                    }
                                }
                            },
                            "required": [
                                "payment"
                            ]
                        },
                        "x-examples": {
                            "application/json": {
                                "payment": {
                                    "instrument": {},
                                    "payment_method_id": "Lorem in",
                                    "amount": 81505146,
                                    "currency_code": "NYE"
                                }
                            },
                            "Payment Access Token": "curl -X POST \\\n  https://payments.bigcommerce.com/stores/{$$.env.store_hash}/payments \\\n  -H 'Accept: application/vnd.bc.v1+json' \\\n  -H 'Authorization: PAT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1NsdfasftIsIm5iZiI6MTU1MTM5MDU0MiwiaXNzIjoicGF5bWVudHMuYmlnY29tbWVyY2UuY29tIiwic3ViIjoianJhaDZnbW4iLCJqdGkiOiI3Nzg3ZmU1Zi01OWJmLTQ3ZWMtYTFmZC00ZDQ3ZTkwNjFlNWMiLCJpYXQiOjE1NTEzOTA1NDIsImRhdGEiOnsic3RvcmVfaWQiOjEwMjU2NDYsIm9yZGVyX2lkIjoyMTUsImFtb3VudCI6OTgwMCwiY3VycmVuY3kiOiJVU0QifX0.WbR90d8m4gn8wK7kPMDEoVq8B0hHC5Ul5H4Hpqq6Yvo' \\\n  -H 'Content-Type: application/json' \\",
                            "Vaulted Card": {
                                "payment": {
                                    "instrument": {
                                        "type": "stored_card",
                                        "token": "vaulted instrument token",
                                        "verification_value": "123"
                                    },
                                    "payment_method_id": "stripe.card",
                                    "save_instrument": true
                                }
                            },
                            "Credit Card": "{\n  \"payment\": {\n    \"instrument\": {\n      \"type\": \"card\",\n      \"number\": \"4111111111111111\",\n      \"cardholder_name\": \"BP\",\n      \"expiry_month\": 12,\n      \"expiry_year\": 2020,\n      \"verification_value\": \"411\"\n    },\n    \"payment_method_id\": \"authorizenet.card\",\n     \"save_instrument\": true\n  }\n}"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "type": "string",
                        "default": "application/vnd.bc.v1+json",
                        "enum": [
                            "application/vnd.bc.v1+json"
                        ]
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "type": "string",
                        "default": "application/json"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Payment has been successfully processed",
                        "schema": {
                            "title": "Success Payment Response",
                            "type": "object",
                            "properties": {
                                "id": {
                                    "description": "Identifier for this transaction",
                                    "type": "string"
                                },
                                "transaction_type": {
                                    "title": "Transaction Type",
                                    "description": "Transaction type for this payment",
                                    "example": "authorization",
                                    "type": "string",
                                    "enum": [
                                        "authorization",
                                        "purchase"
                                    ]
                                },
                                "status": {
                                    "type": "string",
                                    "title": "Status",
                                    "description": "Status to indicate a success response",
                                    "enum": [
                                        "success",
                                        "pending"
                                    ]
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "id": "227d9e1e-94f8-408c-95a5-f97b30592eb7",
                                "transaction_type": "authorization",
                                "status": "pending"
                            }
                        }
                    },
                    "400": {
                        "description": "Payment request has been rejected due to malformed request",
                        "schema": {
                            "title": "Error Payment Response",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "description": "HTTP status code",
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "title": {
                                    "description": "Short summary describing the particular error",
                                    "type": "string"
                                },
                                "detail": {
                                    "description": "Detailed summary describing the particular error",
                                    "type": "string"
                                },
                                "type": {
                                    "description": "Reference that identifies the particular error",
                                    "type": "string"
                                },
                                "code": {
                                    "description": "Code representing the particular error",
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "errors": {
                                    "description": "",
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "title",
                                "type"
                            ]
                        }
                    },
                    "401": {
                        "description": "Valid authentication required",
                        "schema": {
                            "title": "Error Payment Response",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "description": "HTTP status code",
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "title": {
                                    "description": "Short summary describing the particular error",
                                    "type": "string"
                                },
                                "detail": {
                                    "description": "Detailed summary describing the particular error",
                                    "type": "string"
                                },
                                "type": {
                                    "description": "Reference that identifies the particular error",
                                    "type": "string"
                                },
                                "code": {
                                    "description": "Code representing the particular error",
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "errors": {
                                    "description": "",
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "title",
                                "type"
                            ]
                        }
                    },
                    "422": {
                        "description": "Payment request has been rejected due to missing, invalid data or declined by payment provider",
                        "schema": {
                            "title": "Error Payment Response",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "description": "HTTP status code",
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "title": {
                                    "description": "Short summary describing the particular error",
                                    "type": "string"
                                },
                                "detail": {
                                    "description": "Detailed summary describing the particular error",
                                    "type": "string"
                                },
                                "type": {
                                    "description": "Reference that identifies the particular error",
                                    "type": "string"
                                },
                                "code": {
                                    "description": "Code representing the particular error",
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "errors": {
                                    "description": "",
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "title",
                                "type"
                            ]
                        }
                    },
                    "default": {
                        "description": "Internal server error",
                        "schema": {
                            "title": "Error Payment Response",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "description": "HTTP status code",
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "title": {
                                    "description": "Short summary describing the particular error",
                                    "type": "string"
                                },
                                "detail": {
                                    "description": "Detailed summary describing the particular error",
                                    "type": "string"
                                },
                                "type": {
                                    "description": "Reference that identifies the particular error",
                                    "type": "string"
                                },
                                "code": {
                                    "description": "Code representing the particular error",
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "errors": {
                                    "description": "",
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "title",
                                "type"
                            ]
                        }
                    }
                },
                "summary": "Process Payment for an Order"
            }
        }
    },
    "definitions": {
        "PaymentRequest": {
            "title": "Payment Request",
            "type": "object",
            "properties": {
                "payment": {
                    "title": "Payment",
                    "type": "object",
                    "required": [
                        "instrument",
                        "payment_method_id"
                    ],
                    "properties": {
                        "amount": {
                            "description": "Amount in smallest currency unit",
                            "type": "integer",
                            "format": "int32"
                        },
                        "currency_code": {
                            "description": "Currency code",
                            "type": "string",
                            "pattern": "^[A-Z]{3}$"
                        },
                        "instrument": {
                            "description": "",
                            "type": "object"
                        },
                        "payment_method_id": {
                            "description": "Identifier for payment method that will be used for this payment",
                            "type": "string",
                            "minLength": 1
                        }
                    }
                }
            },
            "required": [
                "payment"
            ]
        },
        "Payment": {
            "title": "Payment",
            "type": "object",
            "properties": {
                "amount": {
                    "description": "Amount in smallest currency unit",
                    "type": "integer",
                    "format": "int32"
                },
                "currency_code": {
                    "description": "Currency code",
                    "type": "string",
                    "pattern": "^[A-Z]{3}$"
                },
                "instrument": {
                    "description": "",
                    "type": "object"
                },
                "payment_method_id": {
                    "description": "Identifier for payment method that will be used for this payment",
                    "type": "string",
                    "minLength": 1
                }
            },
            "required": [
                "instrument",
                "payment_method_id"
            ]
        },
        "SuccessPaymentResponse": {
            "title": "Success Payment Response",
            "type": "object",
            "properties": {
                "id": {
                    "description": "Identifier for this transaction",
                    "type": "string"
                },
                "transaction_type": {
                    "title": "Transaction Type",
                    "description": "Transaction type for this payment",
                    "example": "authorization",
                    "type": "string",
                    "enum": [
                        "authorization",
                        "purchase"
                    ]
                },
                "status": {
                    "type": "string",
                    "title": "Status",
                    "description": "Status to indicate a success response",
                    "enum": [
                        "success",
                        "pending"
                    ]
                }
            }
        },
        "TransactionType": {
            "title": "Transaction Type",
            "description": "Transaction type for this payment",
            "example": "authorization",
            "type": "string",
            "enum": [
                "authorization",
                "purchase"
            ]
        },
        "Status": {
            "type": "string",
            "title": "Status",
            "description": "Status to indicate a success response",
            "enum": [
                "success",
                "pending"
            ]
        },
        "ErrorPaymentResponse": {
            "title": "Error Payment Response",
            "type": "object",
            "properties": {
                "status": {
                    "description": "HTTP status code",
                    "type": "integer",
                    "format": "int32"
                },
                "title": {
                    "description": "Short summary describing the particular error",
                    "type": "string"
                },
                "detail": {
                    "description": "Detailed summary describing the particular error",
                    "type": "string"
                },
                "type": {
                    "description": "Reference that identifies the particular error",
                    "type": "string"
                },
                "code": {
                    "description": "Code representing the particular error",
                    "type": "integer",
                    "format": "int32"
                },
                "errors": {
                    "description": "",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "status",
                "title",
                "type"
            ]
        },
        "Card": {
            "title": "Card",
            "type": "object",
            "properties": {
                "type": {
                    "description": "Type to classify this payment instrument",
                    "example": "card",
                    "type": "string",
                    "default": "card"
                },
                "cardholder_name": {
                    "description": "Cardholder's full name",
                    "type": "string",
                    "minLength": 1
                },
                "number": {
                    "description": "Credit card number",
                    "type": "string",
                    "minLength": 1
                },
                "expiry_month": {
                    "description": "Expiry month of this card",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 12,
                    "format": "int32"
                },
                "expiry_year": {
                    "description": "Expiry year of this card",
                    "type": "integer",
                    "format": "int32"
                },
                "verification_value": {
                    "description": "Verification value of this card",
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 4
                },
                "issue_month": {
                    "description": "Issue month of this card",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 12,
                    "format": "int32"
                },
                "issue_year": {
                    "description": "Issue year of this card",
                    "type": "integer",
                    "format": "int32"
                },
                "issue_number": {
                    "description": "Issue number of this card",
                    "type": "integer",
                    "format": "int32"
                }
            },
            "required": [
                "type",
                "cardholder_name",
                "number",
                "expiry_month",
                "expiry_year"
            ]
        },
        "StoredCard": {
            "title": "Stored Card",
            "type": "object",
            "properties": {
                "type": {
                    "description": "Type to classify this payment instrument",
                    "example": "stored_card",
                    "type": "string",
                    "default": "stored_card"
                },
                "token": {
                    "description": "Identifier representing this stored card",
                    "type": "string",
                    "minLength": 64,
                    "maxLength": 64
                }
            },
            "required": [
                "type",
                "token"
            ]
        },
        "BasePaymentResponse": {
            "title": "Base Payment Response",
            "type": "object",
            "properties": {
                "id": {
                    "description": "Identifier for this transaction",
                    "type": "string"
                },
                "transaction_type": {
                    "title": "Transaction Type",
                    "description": "Transaction type for this payment",
                    "example": "authorization",
                    "type": "string",
                    "enum": [
                        "authorization",
                        "purchase"
                    ]
                }
            }
        },
        "PendingPaymentResponse": {
            "title": "Pending Payment Response",
            "type": "object",
            "properties": {
                "id": {
                    "description": "Identifier for this transaction",
                    "type": "string"
                },
                "transaction_type": {
                    "title": "Transaction Type",
                    "description": "Transaction type for this payment",
                    "example": "authorization",
                    "type": "string",
                    "enum": [
                        "authorization",
                        "purchase"
                    ]
                },
                "status": {
                    "type": "string",
                    "title": "Status",
                    "description": "Status to indicate a success response",
                    "enum": [
                        "success",
                        "pending"
                    ]
                }
            }
        },
        "Error": {
            "title": "Error",
            "type": "object",
            "properties": {
                "status": {
                    "description": "HTTP status code",
                    "type": "integer",
                    "format": "int32"
                },
                "title": {
                    "description": "Short summary describing the particular error",
                    "type": "string"
                },
                "detail": {
                    "description": "Detailed summary describing the particular error",
                    "type": "string"
                },
                "type": {
                    "description": "Reference that identifies the particular error",
                    "type": "string"
                },
                "code": {
                    "description": "Code representing the particular error",
                    "type": "integer",
                    "format": "int32"
                }
            },
            "required": [
                "status",
                "title",
                "type"
            ]
        },
        "StoredPaypalAccount": {
            "title": "StoredPaypalAccount",
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Type to classify this payment instrument",
                    "enum": [
                        "stored_paypal_account"
                    ]
                },
                "token": {
                    "description": "Identifier representing this stored paypal account",
                    "type": "string",
                    "minLength": 64,
                    "maxLength": 64
                }
            },
            "required": [
                "type",
                "token"
            ]
        }
    },
    "tags": [
        {
            "name": "Payment",
            "description": ""
        }
    ],
    "parameters": {
        "Accept": {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "default": "application/vnd.bc.v1+json",
            "enum": [
                "application/vnd.bc.v1+json"
            ]
        },
        "Content-Type": {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json"
        }
    },
    "securityDefinitions": {
        "X-Auth-Client": {
            "type": "apiKey",
            "name": "X-Auth-Client",
            "in": "header",
            "description": "### OAuth Scopes\n|  **UI Name** | **Permission** | **Parameter** |\n| --- | --- | --- |\n|  Create Payments | create | `store_payments_access_token_create` |\n\n### Headers\n\n|Header|Parameter|Description|\n|-|-|-|\n|`X-Auth-Client`|`client_id`|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n|`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n\n### Example\n\n```http\nGET /stores/{$$.env.store_hash}/v3/catalog/summary\nhost: api.bigcommerce.com\nContent-Type: application/json\nX-Auth-Client: {client_id}\nX-Auth-Token: {access_token}\n```\n\n* For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication)."
        },
        "X-Auth-Token": {
            "type": "apiKey",
            "in": "header",
            "name": "X-Auth-Token",
            "description": "### OAuth Scopes\n|  **UI Name** | **Permission** | **Parameter** |\n| --- | --- | --- |\n|  Create Payments | create | `store_payments_access_token_create` |\n\n### Headers\n\n|Header|Parameter|Description|\n|-|-|-|\n|`X-Auth-Client`|`client_id`|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n|`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n\n### Example\n\n```http\nGET /stores/{$$.env.store_hash}/v3/catalog/summary\nhost: api.bigcommerce.com\nContent-Type: application/json\nX-Auth-Client: {client_id}\nX-Auth-Token: {access_token}\n```\n\n* For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication)."
        }
    },
    "security": [
        {
            "X-Auth-Client": []
        },
        {
            "X-Auth-Token": []
        }
    ],
    "x-stoplight": {
        "docs": {
            "includeDownloadLink": true,
            "showModels": false
        }
    }
}