{"path":"api-docs/orders/orders-overview","templateID":0,"sharedPropsHashes":{"nav":"ZHaw9F","sidebarTree":"Z427i9","namespace":"Zd6xn0"},"localProps":{"version":"1.3","crumbs":[{"content":"API Docs","to":"/api-docs"},{"content":"Orders","to":"/api-docs/orders"},{"content":"Overview","to":"/api-docs/orders/orders-overview"}],"page":{"meta":{"title":"Overview - Orders - API Docs","url":"/api-docs/orders/orders-overview","description":"Orders\n\n\n\nOn This Page\n\nWhat is an Order?\n\nAvailable Endpoints\n\nStorefront Orders API\n\nServer-to-Server Checkout API\n\nOrders API\n\nOrder Transactions\n\nOA..."},"title":"Overview","parsedPath":["pages","/api-docs","data","children",9,"data","children",0],"rootPagePath":"/api-docs","path":"/api-docs/orders/orders-overview","isSubpage":true,"route":{"path":"/orders-overview"},"data":{"blocks":[{"type":"text","data":"# Orders\r\n\r\n<div class=\"otp\" id=\"no-index\">\r\n\r\n### On This Page\r\n- [What is an Order?](#what-is-an-order)\r\n- [Available Endpoints](#available-endpoints)\r\n- [Storefront Orders API](#storefront-orders-api)\r\n- [Server-to-Server Checkout API](#server-to-server-checkout-api)\r\n- [Orders API](#orders-api)\r\n- [Order Transactions](#order-transactions)\r\n- [OAuth Scopes](#oauth-scopes)\r\n- [Resources](#resources)\r\n\r\n</div> \r\n\r\n## What is an Order?\r\nAn order is a collection of items, along with customer and shipping information, that has been finalized with a payment or attempted payment. \r\n\r\nOrders can contain both digital or physical products. Digital items are delivered via email and do not require a shipping address, whereas physical items require a shipping address and a delivery method. \r\n\r\nBigCommerce offers two possible workflows for creating orders via the API: the Server-to-Server Checkout API or  the Orders API.\r\n* The Server-to-Server Checkout API represents an extension of the Server-to-Server Cart API and can be used to complete a purchase from product selection to conversion.\r\n* The Orders API is used to retrieve or update existing orders or to push orders from a third party, like a POS, to BigCommerce.\r\n\r\n## Available Endpoints\r\n\r\n| Name | Description |\r\n| -- | -- |\r\n| [Storefront Orders](/api-reference/orders/storefront-orders-api) | Retrieve order information from the Order Confirmation page using JavaScript |\r\n| [Server to Server Checkout](/api-reference/cart-checkout/server-server-checkout-api/checkout/createanorder) | Create an order from an existing checkout |\r\n| [Orders API](/api-reference/orders/orders-api) | Create and manage orders. Can manage orders created via API or the Control Panel |\r\n| [Order Transactions](/api-reference/orders/orders-transactions-api) | Get transaction information for existing orders. Read Only Endpoint |\r\n\r\n##  Storefront Orders API \r\nThe Storefront Orders API can be used to return information about a just-placed order on the order confirmation page. You can interact with the Storefront Orders API using an app or a browser API. \r\n\r\nFor an example using the Fetch API to log order information to the console, see [Storefront Orders API](https://developer.bigcommerce.com/api-docs/cart-and-checkout/working-sf-apis).\r\n\r\n### When to Use:\r\n* Scrape order information\r\n* Send order data to an analytics app\r\n\r\n<!--\r\ntitle: \"Log Orders to Console\"\r\nsubtitle: \"\"\r\nlineNumbers: true\r\n-->\r\n\r\n**Log Orders to Console**\r\n```html\r\n<script>\r\nconsole.log(\"Log Orders\")\r\nfetch('/api/storefront/order/{{checkout.order.id}}', {credentials: 'include'})\r\n.then(function(response) {\r\nreturn response.json();\r\n})\r\n.then(function(myJson) {\r\nconsole.log(myJson);\r\n});\r\n</script>\r\n```\r\n\r\n## Server-to-Server Checkout API\r\n\r\nThe Server-to-Server Checkout API allows you to create a checkout programmatically and then convert it to an order. From there, the order can be managed in the Control Panel or using the V2 Orders API. [See Server-to-Server Checkout](https://developer.bigcommerce.com/api-reference/cart-checkout/server-server-checkout-api/checkout/createanorder) for more.\r\n\r\n### When to Use:\r\n* Create an order from an existing checkout\r\n\r\n## Orders API\r\nThe Orders API can be used to create an order without first creating a cart and checkout. It also allows you to manage an order's billing address, products, coupons, and taxes. See [Orders API](/api-reference/orders/orders-api) for a complete list of methods.\r\n\r\n### When to Use: \r\n* Create an order and bypass creating a cart and checkout\r\n* Make changes to existing orders\r\n* Export or import order information to a third-party system\r\n\r\n## Order Transactions\r\nThe Order Transactions API is a read-only endpoint that returns transaction or payment data about an order. The data returned does not include payment tokens for a third party such as Braintree. \r\n\r\n### When to Use:\r\n* View transaction information about an Order. \r\n\r\n## OAuth Scopes\r\n- Orders\r\n- Carts\r\n- Checkouts\r\n\r\nFor a more details and a full list of available scopes, see [Oauth Scopes](/api-docs/getting-started/basics/authentication#authentication_oauth-scopes).\r\n\r\n## Resources\r\n### Webhooks Available\r\n- [Orders](/api-docs/getting-started/webhooks/webhook-events#webhook-events_orders)\r\n\r\n### Related Articles\r\n- [Working with the Storefront Cart and Checkout APIs](https://developer.bigcommerce.com/api-docs/cart-and-checkout/working-sf-apis)\r\n- [How To Embed a Shipping Location Map on the BigCommerce Order Confirmation Page](https://medium.com/bigcommerce-developer-blog/how-to-embed-a-google-map-on-the-bigcommerce-order-confirmation-page-8264747e654d) (Developer Blog)\r\n"}],"children":[]}}}}
