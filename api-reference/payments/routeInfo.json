{"path":"api-reference/payments","templateID":0,"sharedPropsHashes":{"nav":"ZHaw9F","sidebarTree":"1bVRuv","namespace":"Zd6xn0"},"localProps":{"version":"1.3","crumbs":[{"content":"API Reference","to":"/api-reference"},{"content":"Payments","to":"/api-reference/payments"}],"page":{"meta":{"title":"Payments - API Reference","url":"/api-reference/payments","description":""},"title":"Payments","parsedPath":["pages","/api-reference","data","children",1],"rootPagePath":"/api-reference","path":"/api-reference/payments","isSubpage":true,"route":{"path":"/payments"},"data":{"blocks":[],"children":[{"title":"Payment Token & Payment Methods","config":{"includeDownloadLink":true,"spec":{"swagger":"2.0","info":{"title":"Payment Processing Tokens & Methods","termsOfService":"https://www.bigcommerce.com/terms/api-terms/","description":"Use [Get Payment Methods](/api-reference/payments/payments-create-payment-token-api/payment-methods/paymentsmethodsget) to get the `token` for stored cards.\n\nUse [Create Access Token](/api-reference/payments/payments-create-payment-token-api/payment-access-token/paymentsaccesstokenspost), to generate the `token` for stored card, credit cards and orders. \n\nSee [Payments Overview](/api-docs/payments/payments-api-overview) to learn how to accepts payments."},"host":"api.bigcommerce.com","basePath":"/stores/{$$.env.store_hash}/v3","schemes":["https"],"consumes":["application/json"],"produces":["application/json"],"paths":{"/payments/access_tokens":{"post":{"description":"This endpoint provides the capability to create a payment access token. The payment access token is required when making request to Payment API for submitting payment for an order.\n\nAfter the token is created then use the token to [Process Payments](/api-reference/payments/payments-process-payments/payment/paymentspost).\n\n**Required Fields**\n* order_id","summary":"Create Payment Access Token","tags":["Payment Access Token"],"operationId":"PaymentsAccessTokensPost","produces":["application/json"],"parameters":[{"name":"body","in":"body","required":true,"schema":{"title":"Payment Access Token Request","type":"object","properties":{"order":{"title":"Order","type":"object","properties":{"id":{"description":"Identifier for the order","type":"integer","minimum":1,"format":"int32"},"is_recurring":{"description":"Whether this is a recurring order. If the order is recurring this field should be set to true in order to let the payment gateway know. ","type":"boolean"}},"required":["id"]}},"required":["order"]},"x-examples":{"application/json":{"order":{"id":44796008,"is_recurring":true}},"Example":{"order":{"id":182}}}},{"name":"Accept","in":"header","type":"string","default":"application/json"},{"in":"header","type":"string","name":"Content-Type","default":"application/json"}],"responses":{"201":{"description":"Payment access token has been successfully created","schema":{"title":"Payments Access Tokens Response","type":"object","properties":{"data":{"title":"Payment Access Token","type":"object","properties":{"id":{"description":"Payment access token. This token is required in subsequent payment request to Payment API endpoint.","type":"string","minLength":1}},"required":["id"]}}}},"400":{"description":"Request has been rejected","schema":{"title":"ErrorResponse","type":"object","properties":{"status":{"description":"HTTP status code","type":"integer","format":"int32"},"title":{"description":"Short summary describing the particular error","type":"string"},"detail":{"description":"Detailed summary describing the particular error","type":"string"},"type":{"description":"Reference that identifies the particular error","type":"string"},"code":{"description":"Code representing the particular error","type":"integer","format":"int32"},"errors":{"type":"object","additionalProperties":{"type":"string"}}},"required":["status","title","type"]}},"401":{"description":"Valid authentication required","schema":{"title":"ErrorResponse","type":"object","properties":{"status":{"description":"HTTP status code","type":"integer","format":"int32"},"title":{"description":"Short summary describing the particular error","type":"string"},"detail":{"description":"Detailed summary describing the particular error","type":"string"},"type":{"description":"Reference that identifies the particular error","type":"string"},"code":{"description":"Code representing the particular error","type":"integer","format":"int32"},"errors":{"type":"object","additionalProperties":{"type":"string"}}},"required":["status","title","type"]}},"404":{"description":"Request has been rejected due to resource not being found","schema":{"title":"ErrorResponse","type":"object","properties":{"status":{"description":"HTTP status code","type":"integer","format":"int32"},"title":{"description":"Short summary describing the particular error","type":"string"},"detail":{"description":"Detailed summary describing the particular error","type":"string"},"type":{"description":"Reference that identifies the particular error","type":"string"},"code":{"description":"Code representing the particular error","type":"integer","format":"int32"},"errors":{"type":"object","additionalProperties":{"type":"string"}}},"required":["status","title","type"]}},"409":{"description":"Request has been rejected due to conflict with the current state of the target resource","schema":{"title":"ErrorResponse","type":"object","properties":{"status":{"description":"HTTP status code","type":"integer","format":"int32"},"title":{"description":"Short summary describing the particular error","type":"string"},"detail":{"description":"Detailed summary describing the particular error","type":"string"},"type":{"description":"Reference that identifies the particular error","type":"string"},"code":{"description":"Code representing the particular error","type":"integer","format":"int32"},"errors":{"type":"object","additionalProperties":{"type":"string"}}},"required":["status","title","type"]}},"422":{"description":"Request has been rejected due to missing or invalid data","schema":{"title":"ErrorResponse","type":"object","properties":{"status":{"description":"HTTP status code","type":"integer","format":"int32"},"title":{"description":"Short summary describing the particular error","type":"string"},"detail":{"description":"Detailed summary describing the particular error","type":"string"},"type":{"description":"Reference that identifies the particular error","type":"string"},"code":{"description":"Code representing the particular error","type":"integer","format":"int32"},"errors":{"type":"object","additionalProperties":{"type":"string"}}},"required":["status","title","type"]}},"default":{"description":"Internal server error","schema":{"title":"ErrorResponse","type":"object","properties":{"status":{"description":"HTTP status code","type":"integer","format":"int32"},"title":{"description":"Short summary describing the particular error","type":"string"},"detail":{"description":"Detailed summary describing the particular error","type":"string"},"type":{"description":"Reference that identifies the particular error","type":"string"},"code":{"description":"Code representing the particular error","type":"integer","format":"int32"},"errors":{"type":"object","additionalProperties":{"type":"string"}}},"required":["status","title","type"]}}}}},"/payments/methods":{"get":{"description":"Returns a list of accepted payment methods based on the `order_id`.\n\n**Required Fields**\n* order_id","summary":"Get Accepted Payment Methods","tags":["Payment Methods"],"operationId":"PaymentsMethodsGet","produces":["application/json"],"parameters":[{"name":"order_id","in":"query","type":"integer","format":"int32","description":"Identifier for the order"},{"name":"Accept","in":"header","type":"string","default":"application/json"},{"in":"header","type":"string","name":"Content-Type","default":"application/json"}],"responses":{"200":{"description":"Request has been successfully processed","schema":{"title":"Payments Methods Response","type":"object","properties":{"data":{"type":"array","items":{"title":"PaymentMethod","type":"object","properties":{"id":{"description":"Identifier for this payment method","type":"string","minLength":1},"name":{"description":"Name of this payment method","type":"string","minLength":1},"stored_instruments":{"oneOf":[{"title":"Stored Card Instrument","type":"object","properties":{"brand":{"description":"Brand of this card such as VISA or Mastercard","type":"string","minLength":1},"expiry_month":{"description":"Expiry month of this card","type":"integer","minimum":1,"maximum":12,"format":"int32"},"expiry_year":{"description":"Expiry year of this card","type":"integer","format":"int32"},"issuer_identification_number":{"description":"Issuer identification number of this card. This is extracted from the card when the order is payed for.","type":"string","minLength":6,"maxLength":6},"last_4":{"description":"Last four numbers of this card","type":"string","minLength":4,"maxLength":4},"token":{"description":"Identifier representing this stored card. This is used to identify cards within BigCommerce. It is the same as the `payment_access_token` that returns via the [Get Transactions endpoint](https://developer.bigcommerce.com/api-reference/orders/orders-transactions-api/orders/gettransactions).","type":"string","minLength":64,"maxLength":64},"is_default":{"description":"Whether this instrument is a default instrument","type":"boolean"},"type":{"description":"Type to classify this stored card","example":"stored_card","type":"string","default":"stored_card"}},"required":["brand","expiry_month","expiry_year","issuer_identification_number","last_4","token","is_default","type"]},{"title":"StoredPaypalAccountInstrument","type":"object","properties":{"email":{"type":"string","format":"email","description":"Email address of this stored account"},"token":{"type":"string","description":"Identifier representing this stored account","minLength":64,"maxLength":64},"is_default":{"type":"boolean","description":"Whether this instrument is a default instrument"},"type":{"type":"string","description":"Type to classify this stored account","enum":["stored_paypal_account"]}},"required":["email","token","is_default","type"]}]},"supported_instruments":{"oneOf":[{"title":"Supported Card Instrument","type":"object","properties":{"instrument_type":{"title":"InstrumentType","description":"Type of this instrument","example":"VISA","type":"string","enum":["VISA","MASTERCARD","DISCOVER","AMEX","DINERS_CLUB","JCB","DANKORT","MAESTRO","STORED_CARD"]},"verification_value_required":{"description":"Whether verification value is required for payment","type":"boolean"}},"required":["instrument_type"]},{"title":"SupportedPaypalAccountInstrument","type":"object","properties":{"instrument_type":{"type":"string","description":"Type of this instrument","enum":["STORED_PAYPAL_ACCOUNT"]}},"required":["instrument_type"]}]},"test_mode":{"description":"Whether this payment method is on test mode","type":"boolean"},"type":{"description":"Type to classify this payment method","example":"card","type":"string","default":"card"}},"required":["id","name","supported_instruments","test_mode","type"]}}}},"examples":{"application/json":{"data":[{"id":"stripe.card","name":"Stripe","test_mode":true,"type":"card","supported_instruments":[{"instrument_type":"VISA","verification_value_required":true},{"instrument_type":"MASTERCARD","verification_value_required":true},{"instrument_type":"AMEX","verification_value_required":true},{"instrument_type":"DISCOVER","verification_value_required":true},{"instrument_type":"JCB","verification_value_required":true},{"instrument_type":"DINERS_CLUB","verification_value_required":true},{"instrument_type":"STORED_CARD","verification_value_required":true}],"stored_instruments":[{"type":"stored_card","brand":"VISA","expiry_month":9,"expiry_year":2020,"issuer_identification_number":"424242","last_4":"4242","token":"050a1e5c982e5905288ec5ec33f292772762033a0704f46fccb16bf1940b51ef","is_default":true}]}]}}},"400":{"description":"Request has been rejected","schema":{"title":"ErrorResponse","type":"object","properties":{"status":{"description":"HTTP status code","type":"integer","format":"int32"},"title":{"description":"Short summary describing the particular error","type":"string"},"detail":{"description":"Detailed summary describing the particular error","type":"string"},"type":{"description":"Reference that identifies the particular error","type":"string"},"code":{"description":"Code representing the particular error","type":"integer","format":"int32"},"errors":{"type":"object","additionalProperties":{"type":"string"}}},"required":["status","title","type"]}},"401":{"description":"Valid authentication required","schema":{"title":"ErrorResponse","type":"object","properties":{"status":{"description":"HTTP status code","type":"integer","format":"int32"},"title":{"description":"Short summary describing the particular error","type":"string"},"detail":{"description":"Detailed summary describing the particular error","type":"string"},"type":{"description":"Reference that identifies the particular error","type":"string"},"code":{"description":"Code representing the particular error","type":"integer","format":"int32"},"errors":{"type":"object","additionalProperties":{"type":"string"}}},"required":["status","title","type"]}},"404":{"description":"Request has been rejected due to resource not being found","schema":{"title":"ErrorResponse","type":"object","properties":{"status":{"description":"HTTP status code","type":"integer","format":"int32"},"title":{"description":"Short summary describing the particular error","type":"string"},"detail":{"description":"Detailed summary describing the particular error","type":"string"},"type":{"description":"Reference that identifies the particular error","type":"string"},"code":{"description":"Code representing the particular error","type":"integer","format":"int32"},"errors":{"type":"object","additionalProperties":{"type":"string"}}},"required":["status","title","type"]}},"422":{"description":"Request has been rejected due to missing or invalid data","schema":{"title":"ErrorResponse","type":"object","properties":{"status":{"description":"HTTP status code","type":"integer","format":"int32"},"title":{"description":"Short summary describing the particular error","type":"string"},"detail":{"description":"Detailed summary describing the particular error","type":"string"},"type":{"description":"Reference that identifies the particular error","type":"string"},"code":{"description":"Code representing the particular error","type":"integer","format":"int32"},"errors":{"type":"object","additionalProperties":{"type":"string"}}},"required":["status","title","type"]}},"default":{"description":"Internal server error","schema":{"title":"ErrorResponse","type":"object","properties":{"status":{"description":"HTTP status code","type":"integer","format":"int32"},"title":{"description":"Short summary describing the particular error","type":"string"},"detail":{"description":"Detailed summary describing the particular error","type":"string"},"type":{"description":"Reference that identifies the particular error","type":"string"},"code":{"description":"Code representing the particular error","type":"integer","format":"int32"},"errors":{"type":"object","additionalProperties":{"type":"string"}}},"required":["status","title","type"]}}}}}},"definitions":{"Order":{"title":"Order","type":"object","properties":{"id":{"description":"Identifier for the order","type":"integer","minimum":1,"format":"int32"},"is_recurring":{"description":"Whether this is a recurring order. If the order is recurring this field should be set to true in order to let the payment gateway know. ","type":"boolean"}},"required":["id"]},"PaymentAccessTokenRequest":{"title":"Payment Access Token Request","type":"object","properties":{"order":{"title":"Order","type":"object","properties":{"id":{"description":"Identifier for the order","type":"integer","minimum":1,"format":"int32"},"is_recurring":{"description":"Whether this is a recurring order. If the order is recurring this field should be set to true in order to let the payment gateway know. ","type":"boolean"}},"required":["id"]}},"required":["order"]},"PaymentAccessToken":{"title":"Payment Access Token","type":"object","properties":{"id":{"description":"Payment access token. This token is required in subsequent payment request to Payment API endpoint.","type":"string","minLength":1}},"required":["id"]},"StoredCardInstrument":{"title":"Stored Card Instrument","type":"object","properties":{"brand":{"description":"Brand of this card such as VISA or Mastercard","type":"string","minLength":1},"expiry_month":{"description":"Expiry month of this card","type":"integer","minimum":1,"maximum":12,"format":"int32"},"expiry_year":{"description":"Expiry year of this card","type":"integer","format":"int32"},"issuer_identification_number":{"description":"Issuer identification number of this card. This is extracted from the card when the order is payed for.","type":"string","minLength":6,"maxLength":6},"last_4":{"description":"Last four numbers of this card","type":"string","minLength":4,"maxLength":4},"token":{"description":"Identifier representing this stored card. This is used to identify cards within BigCommerce. It is the same as the `payment_access_token` that returns via the [Get Transactions endpoint](https://developer.bigcommerce.com/api-reference/orders/orders-transactions-api/orders/gettransactions).","type":"string","minLength":64,"maxLength":64},"is_default":{"description":"Whether this instrument is a default instrument","type":"boolean"},"type":{"description":"Type to classify this stored card","example":"stored_card","type":"string","default":"stored_card"}},"required":["brand","expiry_month","expiry_year","issuer_identification_number","last_4","token","is_default","type"]},"PaymentMethod":{"title":"PaymentMethod","type":"object","properties":{"id":{"description":"Identifier for this payment method","type":"string","minLength":1},"name":{"description":"Name of this payment method","type":"string","minLength":1},"stored_instruments":{"type":"array","items":{"title":"Stored Card Instrument","type":"object","properties":{"brand":{"description":"Brand of this card such as VISA or Mastercard","type":"string","minLength":1},"expiry_month":{"description":"Expiry month of this card","type":"integer","minimum":1,"maximum":12,"format":"int32"},"expiry_year":{"description":"Expiry year of this card","type":"integer","format":"int32"},"issuer_identification_number":{"description":"Issuer identification number of this card. This is extracted from the card when the order is payed for.","type":"string","minLength":6,"maxLength":6},"last_4":{"description":"Last four numbers of this card","type":"string","minLength":4,"maxLength":4},"token":{"description":"Identifier representing this stored card. This is used to identify cards within BigCommerce. It is the same as the `payment_access_token` that returns via the [Get Transactions endpoint](https://developer.bigcommerce.com/api-reference/orders/orders-transactions-api/orders/gettransactions).","type":"string","minLength":64,"maxLength":64},"is_default":{"description":"Whether this instrument is a default instrument","type":"boolean"},"type":{"description":"Type to classify this stored card","example":"stored_card","type":"string","default":"stored_card"}},"required":["brand","expiry_month","expiry_year","issuer_identification_number","last_4","token","is_default","type"]}},"supported_instruments":{"type":"array","items":{"title":"Supported Card Instrument","type":"object","properties":{"instrument_type":{"title":"InstrumentType","description":"Type of this instrument","example":"VISA","type":"string","enum":["VISA","MASTERCARD","DISCOVER","AMEX","DINERS_CLUB","JCB","DANKORT","MAESTRO","STORED_CARD"]},"verification_value_required":{"description":"Whether verification value is required for payment","type":"boolean"}},"required":["instrument_type"]}},"test_mode":{"description":"Whether this payment method is on test mode","type":"boolean","default":"false"},"type":{"description":"Type to classify this payment method","example":"card","type":"string","default":"card"}},"required":["id","name","supported_instruments","test_mode","type"]},"SupportedCardInstrument":{"title":"Supported Card Instrument","type":"object","properties":{"instrument_type":{"title":"InstrumentType","description":"Type of this instrument","example":"VISA","type":"string","enum":["VISA","MASTERCARD","DISCOVER","AMEX","DINERS_CLUB","JCB","DANKORT","MAESTRO","STORED_CARD"]},"verification_value_required":{"description":"Whether verification value is required for payment","type":"boolean"}},"required":["instrument_type"]},"Error":{"title":"Error","type":"object","properties":{"status":{"description":"HTTP status code","type":"integer","format":"int32"},"title":{"description":"Short summary describing the particular error","type":"string"},"detail":{"description":"Detailed summary describing the particular error","type":"string"},"type":{"description":"Reference that identifies the particular error","type":"string"},"code":{"description":"Code representing the particular error","type":"integer","format":"int32"}},"required":["status","title","type"]},"ErrorResponse":{"title":"ErrorResponse","type":"object","properties":{"status":{"description":"HTTP status code","type":"integer","format":"int32"},"title":{"description":"Short summary describing the particular error","type":"string"},"detail":{"description":"Detailed summary describing the particular error","type":"string"},"type":{"description":"Reference that identifies the particular error","type":"string"},"code":{"description":"Code representing the particular error","type":"integer","format":"int32"},"errors":{"type":"object","additionalProperties":{"type":"string"}}},"required":["status","title","type"]},"InstrumentType":{"title":"InstrumentType","description":"Type of this instrument","example":"VISA","type":"string","enum":["VISA","MASTERCARD","DISCOVER","AMEX","DINERS_CLUB","JCB","DANKORT","MAESTRO","STORED_CARD"]},"PaymentsAccessTokensResponse":{"title":"Payments Access Tokens Response","type":"object","properties":{"data":{"title":"Payment Access Token","type":"object","properties":{"id":{"description":"Payment access token. This token is required in subsequent payment request to Payment API endpoint.","type":"string","minLength":1}},"required":["id"]}}},"PaymentsMethodsResponse":{"title":"Payments Methods Response","type":"object","properties":{"data":{"type":"array","items":{"title":"PaymentMethod","type":"object","properties":{"id":{"description":"Identifier for this payment method","type":"string","minLength":1},"name":{"description":"Name of this payment method","type":"string","minLength":1},"stored_instruments":{"type":"array","items":{"title":"Stored Card Instrument","type":"object","properties":{"brand":{"description":"Brand of this card such as VISA or Mastercard","type":"string","minLength":1},"expiry_month":{"description":"Expiry month of this card","type":"integer","minimum":1,"maximum":12,"format":"int32"},"expiry_year":{"description":"Expiry year of this card","type":"integer","format":"int32"},"issuer_identification_number":{"description":"Issuer identification number of this card. This is extracted from the card when the order is payed for.","type":"string","minLength":6,"maxLength":6},"last_4":{"description":"Last four numbers of this card","type":"string","minLength":4,"maxLength":4},"token":{"description":"Identifier representing this stored card. This is used to identify cards within BigCommerce. It is the same as the `payment_access_token` that returns via the [Get Transactions endpoint](https://developer.bigcommerce.com/api-reference/orders/orders-transactions-api/orders/gettransactions).","type":"string","minLength":64,"maxLength":64},"is_default":{"description":"Whether this instrument is a default instrument","type":"boolean"},"type":{"description":"Type to classify this stored card","example":"stored_card","type":"string","default":"stored_card"}},"required":["brand","expiry_month","expiry_year","issuer_identification_number","last_4","token","is_default","type"]}},"supported_instruments":{"type":"array","items":{"title":"Supported Card Instrument","type":"object","properties":{"instrument_type":{"title":"InstrumentType","description":"Type of this instrument","example":"VISA","type":"string","enum":["VISA","MASTERCARD","DISCOVER","AMEX","DINERS_CLUB","JCB","DANKORT","MAESTRO","STORED_CARD"]},"verification_value_required":{"description":"Whether verification value is required for payment","type":"boolean"}},"required":["instrument_type"]}},"test_mode":{"description":"Whether this payment method is on test mode","type":"boolean","default":"false"},"type":{"description":"Type to classify this payment method","example":"card","type":"string","default":"card"}},"required":["id","name","supported_instruments","test_mode","type"]}}}},"StoredPaypalAccountInstrument":{"title":"StoredPaypalAccountInstrument","type":"object","properties":{"email":{"type":"string","format":"email","description":"Email address of this stored account"},"token":{"type":"string","description":"Identifier representing this stored account","minLength":64,"maxLength":64},"is_default":{"type":"boolean","description":"Whether this instrument is a default instrument"},"type":{"type":"string","description":"Type to classify this stored account","enum":["stored_paypal_account"]}},"required":["email","token","is_default","type"]},"SupportedPaypalAccountInstrument":{"title":"SupportedPaypalAccountInstrument","type":"object","properties":{"instrument_type":{"type":"string","description":"Type of this instrument","enum":["STORED_PAYPAL_ACCOUNT"]}},"required":["instrument_type"]}},"tags":[{"name":"Payment Access Token"},{"name":"Payment Methods"}],"securityDefinitions":{"X-Auth-Client":{"type":"apiKey","in":"header","name":"X-Auth-Client","description":"### OAuth Scopes\n|  **UI Name** | **Permission** | **Parameter** |\n| --- | --- | --- |\n|  Create Payments | create | `store_payments_access_token_create` |\n|  Get Payment Methods | read-only | `store_payments_methods_read` |\n\n### Headers\n\n|Header|Parameter|Description|\n|-|-|-|\n|`X-Auth-Client`|`client_id`|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n|`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n\n### Example\n\n```http\nGET /stores/{$$.env.store_hash}/v3/catalog/summary\nhost: api.bigcommerce.com\nContent-Type: application/json\nX-Auth-Client: {client_id}\nX-Auth-Token: {access_token}\n```\n\n* For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication). "},"X-Auth-Token":{"type":"apiKey","name":"X-Auth-Token","in":"header","description":"### OAuth Scopes\n|  **UI Name** | **Permission** | **Parameter** |\n| --- | --- | --- |\n|  Create Payments | create | `store_payments_access_token_create` |\n|  Get Payment Methods | read-only | `store_payments_methods_read` |\n\n### Headers\n\n|Header|Parameter|Description|\n|-|-|-|\n|`X-Auth-Client`|`client_id`|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n|`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n\n### Example\n\n```http\nGET /stores/{$$.env.store_hash}/v3/catalog/summary\nhost: api.bigcommerce.com\nContent-Type: application/json\nX-Auth-Client: {client_id}\nX-Auth-Token: {access_token}\n```\n\n* For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication). "}},"security":[{},{}],"parameters":{"Accept":{"name":"Accept","in":"header","type":"string","default":"application/json"},"Content-Type":{"in":"header","type":"string","name":"Content-Type","default":"application/json"}},"x-stoplight":{"docs":{"includeDownloadLink":true}}},"file":{"name":"BigCommerce_Payments_API.oas2.json","exporter":"https://next-api.stoplight.io/files.export?projectId=8433&branch=version%2F1.3&path=%2FBigCommerce_Payments_API.oas2.yml&deref=all","path":"BigCommerce_Payments_API.oas2.json"}},"route":{"path":"/payments-create-payment-token-api"},"data":{"children":[{"title":"Payment Access Token","route":{"path":"/payment-access-token"},"data":{"children":[{"title":"Create Payment Access Token","route":{"path":"/paymentsaccesstokenspost"},"config":{"sidebar":{"token":"post"}},"data":{}}]}},{"title":"Payment Methods","route":{"path":"/payment-methods"},"data":{"children":[{"title":"Get Accepted Payment Methods","route":{"path":"/paymentsmethodsget"},"config":{"sidebar":{"token":"get"}},"data":{}}]}}]}},{"title":"Enabled Store Payment Methods","config":{"includeDownloadLink":true,"spec":{"swagger":"2.0","info":{"title":"Payment Methods","description":"Returns a list of all enabled *Payment Methods* on a store.\nIf you are trying to process payment for an order see [Payments API](/api-docs/payments/payments-api-overview).","license":{}},"host":"api.bigcommerce.com","basePath":"/stores/{$$.env.store_hash}/v2","schemes":["https"],"consumes":["application/json"],"produces":["application/json"],"paths":{"/payments/methods":{"get":{"description":"Gets the list of enabled payment methods. Default sorting is by payment method, alphabetically from A to Z.","summary":"Get All Payment Methods","parameters":[{"name":"Accept","in":"header","required":true,"type":"string","default":"application/json"},{"name":"Content-Type","in":"header","required":true,"type":"string","default":"application/json"},{"name":"page","in":"query","type":"number","description":"Optional filter param `/api/v2/payments/methods?page={number}`"},{"name":"limit","in":"query","type":"number","description":"Optional filter param `/api/v2/payments/methods?limit={count}`"}],"responses":{"200":{"schema":{"type":"array","items":{"title":"PaymentMethod","example":{"code":"squarev2","name":"Square"},"type":"object","properties":{"code":{"description":"Unique platform-wide code identifying the payment method.","example":"squarev2","type":"string"},"name":{"description":"Descriptive name of the payment method.","example":"Square","type":"string"},"test_mode":{"description":"Determines whether the payment gateway is in test mode. Always false for offline payment methods.","type":"boolean"}}}},"examples":{"application/json":[{"code":"braintree","name":"Braintree"},{"code":"braintreepaypal","name":"Braintree (PayPal)"},{"code":"braintreepaypalcredit","name":"Braintree (PayPal Credit)"},{"code":"instore","name":"Pay in Store"}],"Response Schema":[{"code":"fugiat aliqua elit","name":"do consequat","test_mode":true},{"code":"quis","name":"dolor ad ut anim"},{"code":"nisi","name":"in deserunt in","test_mode":true},{"code":"ullamco est","name":"sit ","test_mode":true},{"code":"id ut sunt consequa","name":"cupidata"}]}}},"x-operation-settings":{},"tags":["Payment Methods"]}}},"definitions":{"PaymentMethod":{"title":"PaymentMethod","example":{"code":"squarev2","name":"Square"},"type":"object","properties":{"code":{"description":"Unique platform-wide code identifying the payment method.","example":"squarev2","type":"string"},"name":{"description":"Descriptive name of the payment method.","example":"Square","type":"string"},"test_mode":{"description":"Determines whether the payment gateway is in test mode. Always false for offline payment methods.","type":"boolean"}}}},"tags":[{"name":"Payment Methods"}],"securityDefinitions":{"X-Auth-Client":{"type":"apiKey","name":"X-Auth-Client","in":"header","description":"### OAuth Scopes\n|  **UI Name** | **Permission** | **Parameter** |\n| --- | --- | --- |\n|  Get Payment Methods | read-only | `store_payments_methods_read` |\n\n### Headers\n\n|Header|Parameter|Description|\n|-|-|-|\n|`X-Auth-Client`|`client_id`|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n|`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n\n### Example\n\n```http\nGET /stores/{$$.env.store_hash}/v3/catalog/summary\nhost: api.bigcommerce.com\nContent-Type: application/json\nX-Auth-Client: {client_id}\nX-Auth-Token: {access_token}\n```\n\n* For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication). "},"X-Auth-Token":{"type":"apiKey","name":"X-Auth-Token","in":"header","description":"### OAuth Scopes\n|  **UI Name** | **Permission** | **Parameter** |\n| --- | --- | --- |\n|  Get Payment Methods | read-only | `store_payments_methods_read` |\n\n### Headers\n\n|Header|Parameter|Description|\n|-|-|-|\n|`X-Auth-Client`|`client_id`|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n|`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n\n### Example\n\n```http\nGET /stores/{$$.env.store_hash}/v3/catalog/summary\nhost: api.bigcommerce.com\nContent-Type: application/json\nX-Auth-Client: {client_id}\nX-Auth-Token: {access_token}\n```\n\n* For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication). "}},"security":[{},{}],"x-stoplight":{"docs":{"includeDownloadLink":true}}},"file":{"name":"BigCommerce_Enabled_Payment_Methods_API.oas2.json","exporter":"https://next-api.stoplight.io/files.export?projectId=8433&branch=version%2F1.3&path=%2FBigCommerce_Enabled_Payment_Methods_API.oas2.yml&deref=all","path":"BigCommerce_Enabled_Payment_Methods_API.oas2.json"}},"route":{"path":"/payment-methods-api"},"data":{"children":[{"title":"Payment Methods","route":{"path":"/payment-methods"},"data":{"children":[{"title":"Get All Payment Methods","route":{"path":"/getpaymentsmethods"},"config":{"sidebar":{"token":"get"}},"data":{}}]}}]}},{"title":"Process Payment","config":{"includeDownloadLink":true,"spec":{"swagger":"2.0","info":{"title":"Payment Processing","description":"This server-to-server endpoint provides the capability to process payment using payment instrument such as credit card. \nSee [Payments Overview](/api-docs/payments/payments-api-overview) for more. \n\nWhile the Try It Now will work, please use other methods of testing for security.","termsOfService":"https://www.bigcommerce.com/terms/api-terms/"},"host":"payments.bigcommerce.com","basePath":"/stores/{store_hash}","schemes":["https"],"consumes":["application/json"],"produces":["application/json"],"paths":{"/payments":{"post":{"description":"- Depending on merchant's configuration in BigCommerce's Control Panel, the payment request will be processed as either 'Authorize only' or 'Authorize and Capture'.\n\n- If the test payment gateway is enabled on a store, that can also be used during testing\n\n- Payments can be processed using Stored Cards, Payment Tokens or Credit Cards. See [Payments API Overview](/api-docs/payments/payments-api-overview) for more.\n\nHeaders:\n\nPayment Access Token: \n- X-Auth-Client\n- X-Auth-Token\n- Content-Type: application/json\n- Accept: application/json\n\nStored Cards/Credit Card:\n- Content-Type: application/json\n- Accept: application/vnd.bc.v1+json\n- Authorization: PAT a-valid-payment-access-token","tags":["Payment"],"operationId":"PaymentsPost","produces":["application/json"],"parameters":[{"name":"Authorization","in":"header","required":true,"type":"string","description":"Authorization header with a valid payment access token is required to access this endpoint e.g. Authorization: PAT a-valid-payment-access-token"},{"name":"body","in":"body","required":true,"schema":{"title":"Payment Request","type":"object","description":"## Credit Card\n```\n{\n  \"payment\": {\n    \"instrument\": {\n      \"type\": \"card\",\n      \"number\": \"4111111111111111\",\n      \"cardholder_name\": \"BP\",\n      \"expiry_month\": 12,\n      \"expiry_year\": 2020,\n      \"verification_value\": \"411\"\n    },\n    \"payment_method_id\": \"authorizenet.card\",\n\t\t\"save_instrument\": true\n\t\t\n  }\n}\n```\n\n## Stored Card\n\n```\n{\n  \"payment\": {\n    \"instrument\": {\n      \"type\": \"stored_card\",\n      \"token\": \"vaulted instrument token\",\n      \"verification_value\": \"123\"\n    },\n    \"payment_method_id\": \"stripe.card\",\n    \"save_instrument\": true\n  }\n}\n```","properties":{"payment":{"title":"Payment","type":"object","required":["instrument","payment_method_id"],"properties":{"amount":{"description":"Amount in smallest currency unit","type":"integer","format":"int32"},"currency_code":{"description":"Currency code","type":"string","pattern":"^[A-Z]{3}$"},"instrument":{"oneOf":[{"title":"Card","type":"object","properties":{"type":{"description":"Type to classify this payment instrument","example":"card","type":"string","default":"card"},"cardholder_name":{"description":"Cardholder's full name","type":"string","minLength":1},"number":{"description":"Credit card number","type":"string","minLength":1},"expiry_month":{"description":"Expiry month of this card","type":"integer","minimum":1,"maximum":12,"format":"int32"},"expiry_year":{"description":"Expiry year of this card","type":"integer","format":"int32"},"verification_value":{"description":"Verification value of this card","type":"string","minLength":3,"maxLength":4},"issue_month":{"description":"Issue month of this card","type":"integer","minimum":1,"maximum":12,"format":"int32"},"issue_year":{"description":"Issue year of this card","type":"integer","format":"int32"},"issue_number":{"description":"Issue number of this card","type":"integer","format":"int32"}},"required":["type","cardholder_name","number","expiry_month","expiry_year"]},{"title":"Stored Card","type":"object","properties":{"type":{"description":"Type to classify this payment instrument","example":"stored_card","type":"string","default":"stored_card"},"token":{"description":"Identifier representing this stored card","type":"string","minLength":64,"maxLength":64}},"required":["type","token"]},{"title":"StoredPaypalAccount","type":"object","properties":{"type":{"type":"string","description":"Type to classify this payment instrument","enum":["stored_paypal_account"]},"token":{"description":"Identifier representing this stored paypal account","type":"string","minLength":64,"maxLength":64}},"required":["type","token"]}]},"payment_method_id":{"description":"Identifier for payment method that will be used for this payment","type":"string","minLength":1}}}},"required":["payment"]},"x-examples":{"application/json":{"payment":{"payment_method_id":"Lorem in","amount":81505146,"currency_code":"NYE"}},"Payment Access Token":"curl -X POST \\\n  https://payments.bigcommerce.com/stores/{$$.env.store_hash}/payments \\\n  -H 'Accept: application/vnd.bc.v1+json' \\\n  -H 'Authorization: PAT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1NsdfasftIsIm5iZiI6MTU1MTM5MDU0MiwiaXNzIjoicGF5bWVudHMuYmlnY29tbWVyY2UuY29tIiwic3ViIjoianJhaDZnbW4iLCJqdGkiOiI3Nzg3ZmU1Zi01OWJmLTQ3ZWMtYTFmZC00ZDQ3ZTkwNjFlNWMiLCJpYXQiOjE1NTEzOTA1NDIsImRhdGEiOnsic3RvcmVfaWQiOjEwMjU2NDYsIm9yZGVyX2lkIjoyMTUsImFtb3VudCI6OTgwMCwiY3VycmVuY3kiOiJVU0QifX0.WbR90d8m4gn8wK7kPMDEoVq8B0hHC5Ul5H4Hpqq6Yvo' \\\n  -H 'Content-Type: application/json' \\","Vaulted Card":"{\n  \"payment\": {\n    \"instrument\": {\n      \"type\": \"stored_card\",\n      \"token\": \"vaulted instrument token\",\n      \"verification_value\": \"123\"\n    },\n    \"payment_method_id\": \"stripe.card\"\n  }\n}","Credit Card":"{\n  \"payment\": {\n    \"instrument\": {\n      \"type\": \"card\",\n      \"number\": \"4111111111111111\",\n      \"cardholder_name\": \"BP\",\n      \"expiry_month\": 12,\n      \"expiry_year\": 2020,\n      \"verification_value\": \"411\"\n    },\n    \"payment_method_id\": \"authorizenet.card\",\n     \"save_instrument\": true\n  }\n}"}},{"name":"Accept","in":"header","type":"string","default":"application/vnd.bc.v1+json","enum":["application/vnd.bc.v1+json"]},{"name":"Content-Type","in":"header","type":"string","default":"application/json"}],"responses":{"202":{"description":"Payment has been successfully processed","schema":{"title":"Success Payment Response","type":"object","properties":{"id":{"description":"Identifier for this transaction","type":"string"},"transaction_type":{"title":"Transaction Type","description":"Transaction type for this payment","example":"authorization","type":"string","enum":["authorization","purchase"]},"status":{"type":"string","title":"Status","description":"Status to indicate a success response","enum":["success","pending"]}}},"examples":{"application/json":{"id":"reprehenderit consectetur veniam deserunt anim","transaction_type":"authorization","status":"pending"}}},"400":{"description":"Payment request has been rejected due to malformed request","schema":{"title":"Error Payment Response","type":"object","properties":{"status":{"description":"HTTP status code","type":"integer","format":"int32"},"title":{"description":"Short summary describing the particular error","type":"string"},"detail":{"description":"Detailed summary describing the particular error","type":"string"},"type":{"description":"Reference that identifies the particular error","type":"string"},"code":{"description":"Code representing the particular error","type":"integer","format":"int32"},"errors":{"type":"object","additionalProperties":{"type":"string"}}},"required":["status","title","type"]}},"401":{"description":"Valid authentication required","schema":{"title":"Error Payment Response","type":"object","properties":{"status":{"description":"HTTP status code","type":"integer","format":"int32"},"title":{"description":"Short summary describing the particular error","type":"string"},"detail":{"description":"Detailed summary describing the particular error","type":"string"},"type":{"description":"Reference that identifies the particular error","type":"string"},"code":{"description":"Code representing the particular error","type":"integer","format":"int32"},"errors":{"type":"object","additionalProperties":{"type":"string"}}},"required":["status","title","type"]}},"422":{"description":"Payment request has been rejected due to missing, invalid data or declined by payment provider","schema":{"title":"Error Payment Response","type":"object","properties":{"status":{"description":"HTTP status code","type":"integer","format":"int32"},"title":{"description":"Short summary describing the particular error","type":"string"},"detail":{"description":"Detailed summary describing the particular error","type":"string"},"type":{"description":"Reference that identifies the particular error","type":"string"},"code":{"description":"Code representing the particular error","type":"integer","format":"int32"},"errors":{"type":"object","additionalProperties":{"type":"string"}}},"required":["status","title","type"]}},"default":{"description":"Internal server error","schema":{"title":"Error Payment Response","type":"object","properties":{"status":{"description":"HTTP status code","type":"integer","format":"int32"},"title":{"description":"Short summary describing the particular error","type":"string"},"detail":{"description":"Detailed summary describing the particular error","type":"string"},"type":{"description":"Reference that identifies the particular error","type":"string"},"code":{"description":"Code representing the particular error","type":"integer","format":"int32"},"errors":{"type":"object","additionalProperties":{"type":"string"}}},"required":["status","title","type"]}}},"summary":"Process Payment for an Order"}}},"definitions":{"PaymentRequest":{"title":"Payment Request","type":"object","properties":{"payment":{"title":"Payment","type":"object","properties":{"amount":{"description":"Amount in smallest currency unit","type":"integer","format":"int32"},"currency_code":{"description":"Currency code","type":"string","pattern":"^[A-Z]{3}$"},"instrument":{"type":"object"},"payment_method_id":{"description":"Identifier for payment method that will be used for this payment","type":"string","minLength":1}},"required":["instrument","payment_method_id"]}},"required":["payment"],"description":"## Credit Card\n```\n{\n  \"payment\": {\n    \"instrument\": {\n      \"type\": \"card\",\n      \"number\": \"4111111111111111\",\n      \"cardholder_name\": \"BP\",\n      \"expiry_month\": 12,\n      \"expiry_year\": 2020,\n      \"verification_value\": \"411\"\n    },\n    \"payment_method_id\": \"authorizenet.card\",\n\t\t\"save_instrument\": true\n\t\t\n  }\n}\n```\n\n## Stored Card\n\n```\n{\n  \"payment\": {\n    \"instrument\": {\n      \"type\": \"stored_card\",\n      \"token\": \"vaulted instrument token\",\n      \"verification_value\": \"123\"\n    },\n    \"payment_method_id\": \"stripe.card\",\n    \"save_instrument\": true\n  }\n}\n```"},"Payment":{"title":"Payment","type":"object","properties":{"amount":{"description":"Amount in smallest currency unit","type":"integer","format":"int32"},"currency_code":{"description":"Currency code","type":"string","pattern":"^[A-Z]{3}$"},"instrument":{"type":"object"},"payment_method_id":{"description":"Identifier for payment method that will be used for this payment","type":"string","minLength":1}},"required":["instrument","payment_method_id"]},"SuccessPaymentResponse":{"title":"Success Payment Response","type":"object","properties":{"id":{"description":"Identifier for this transaction","type":"string"},"transaction_type":{"title":"Transaction Type","description":"Transaction type for this payment","example":"authorization","type":"string","enum":["authorization","purchase"]},"status":{"type":"string","title":"Status","description":"Status to indicate a success response","enum":["success","pending"]}}},"TransactionType":{"title":"Transaction Type","description":"Transaction type for this payment","example":"authorization","type":"string","enum":["authorization","purchase"]},"Status":{"type":"string","title":"Status","description":"Status to indicate a success response","enum":["success","pending"]},"ErrorPaymentResponse":{"title":"Error Payment Response","type":"object","properties":{"status":{"description":"HTTP status code","type":"integer","format":"int32"},"title":{"description":"Short summary describing the particular error","type":"string"},"detail":{"description":"Detailed summary describing the particular error","type":"string"},"type":{"description":"Reference that identifies the particular error","type":"string"},"code":{"description":"Code representing the particular error","type":"integer","format":"int32"},"errors":{"type":"object","additionalProperties":{"type":"string"}}},"required":["status","title","type"]},"Card":{"title":"Card","type":"object","properties":{"type":{"description":"Type to classify this payment instrument","example":"card","type":"string","default":"card"},"cardholder_name":{"description":"Cardholder's full name","type":"string","minLength":1},"number":{"description":"Credit card number","type":"string","minLength":1},"expiry_month":{"description":"Expiry month of this card","type":"integer","minimum":1,"maximum":12,"format":"int32"},"expiry_year":{"description":"Expiry year of this card","type":"integer","format":"int32"},"verification_value":{"description":"Verification value of this card","type":"string","minLength":3,"maxLength":4},"issue_month":{"description":"Issue month of this card","type":"integer","minimum":1,"maximum":12,"format":"int32"},"issue_year":{"description":"Issue year of this card","type":"integer","format":"int32"},"issue_number":{"description":"Issue number of this card","type":"integer","format":"int32"}},"required":["type","cardholder_name","number","expiry_month","expiry_year"]},"StoredCard":{"title":"Stored Card","type":"object","properties":{"type":{"description":"Type to classify this payment instrument","example":"stored_card","type":"string","default":"stored_card"},"token":{"description":"Identifier representing this stored card","type":"string","minLength":64,"maxLength":64}},"required":["type","token"]},"BasePaymentResponse":{"title":"Base Payment Response","type":"object","properties":{"id":{"description":"Identifier for this transaction","type":"string"},"transaction_type":{"title":"Transaction Type","description":"Transaction type for this payment","example":"authorization","type":"string","enum":["authorization","purchase"]}}},"PendingPaymentResponse":{"title":"Pending Payment Response","type":"object","properties":{"id":{"description":"Identifier for this transaction","type":"string"},"transaction_type":{"title":"Transaction Type","description":"Transaction type for this payment","example":"authorization","type":"string","enum":["authorization","purchase"]},"status":{"type":"string","title":"Status","description":"Status to indicate a success response","enum":["success","pending"]}}},"Error":{"title":"Error","type":"object","properties":{"status":{"description":"HTTP status code","type":"integer","format":"int32"},"title":{"description":"Short summary describing the particular error","type":"string"},"detail":{"description":"Detailed summary describing the particular error","type":"string"},"type":{"description":"Reference that identifies the particular error","type":"string"},"code":{"description":"Code representing the particular error","type":"integer","format":"int32"}},"required":["status","title","type"]},"StoredPaypalAccount":{"title":"StoredPaypalAccount","type":"object","properties":{"type":{"type":"string","description":"Type to classify this payment instrument","enum":["stored_paypal_account"]},"token":{"description":"Identifier representing this stored paypal account","type":"string","minLength":64,"maxLength":64}},"required":["type","token"]}},"tags":[{"name":"Payment"}],"parameters":{"Accept":{"name":"Accept","in":"header","type":"string","default":"application/vnd.bc.v1+json","enum":["application/vnd.bc.v1+json"]},"Content-Type":{"name":"Content-Type","in":"header","type":"string","default":"application/json"}},"securityDefinitions":{"X-Auth-Client":{"type":"apiKey","name":"X-Auth-Client","in":"header","description":"### OAuth Scopes\n|  **UI Name** | **Permission** | **Parameter** |\n| --- | --- | --- |\n|  Create Payments | create | `store_payments_access_token_create` |\n\n### Headers\n\n|Header|Parameter|Description|\n|-|-|-|\n|`X-Auth-Client`|`client_id`|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n|`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n\n### Example\n\n```http\nGET /stores/{$$.env.store_hash}/v3/catalog/summary\nhost: api.bigcommerce.com\nContent-Type: application/json\nX-Auth-Client: {client_id}\nX-Auth-Token: {access_token}\n```\n\n* For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication). "},"X-Auth-Token":{"type":"apiKey","in":"header","name":"X-Auth-Token","description":"### OAuth Scopes\n|  **UI Name** | **Permission** | **Parameter** |\n| --- | --- | --- |\n|  Create Payments | create | `store_payments_access_token_create` |\n\n### Headers\n\n|Header|Parameter|Description|\n|-|-|-|\n|`X-Auth-Client`|`client_id`|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n|`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n\n### Example\n\n```http\nGET /stores/{$$.env.store_hash}/v3/catalog/summary\nhost: api.bigcommerce.com\nContent-Type: application/json\nX-Auth-Client: {client_id}\nX-Auth-Token: {access_token}\n```\n\n* For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication). "}},"security":[{},{}],"x-stoplight":{"docs":{"includeDownloadLink":true}}},"file":{"name":"BigCommerce_Process_Payment_API.oas2.json","exporter":"https://next-api.stoplight.io/files.export?projectId=8433&branch=version%2F1.3&path=%2FBigCommerce_Process_Payment_API.oas2.yml&deref=all","path":"BigCommerce_Process_Payment_API.oas2.json"}},"route":{"path":"/payments-process-payments"},"data":{"children":[{"title":"Payment","route":{"path":"/payment"},"data":{"children":[{"title":"Process Payment for an Order","route":{"path":"/paymentspost"},"config":{"sidebar":{"token":"post"}},"data":{}}]}}]}}]}}}}
