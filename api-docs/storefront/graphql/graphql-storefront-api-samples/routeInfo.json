{"path":"api-docs/storefront/graphql/graphql-storefront-api-samples","templateID":0,"sharedPropsHashes":{"nav":"ZHaw9F","sidebarTree":"Z427i9","namespace":"Zd6xn0"},"localProps":{"version":"1.3","crumbs":[{"content":"API Docs","to":"/api-docs"},{"content":"Storefront","to":"/api-docs/storefront"},{"content":"GraphQL","to":"/api-docs/storefront/graphql"},{"content":"Code Samples","to":"/api-docs/storefront/graphql/graphql-storefront-api-samples"}],"page":{"meta":{"title":"Code Samples - GraphQL - Storefront - API Docs","url":"/api-docs/storefront/graphql/graphql-storefront-api-samples","description":"GraphQL Storefront API Example Queries\n\n\n\nOn this Page\n\nGet a Customer's Details\n\nGet First Three Levels of Category Tree\n\nGet Category and Children by ..."},"title":"Code Samples","parsedPath":["pages","/api-docs","data","children",5,"data","children",0,"data","children",1],"rootPagePath":"/api-docs","path":"/api-docs/storefront/graphql/graphql-storefront-api-samples","isSubpage":true,"route":{"path":"/graphql-storefront-api-samples"},"data":{"blocks":[{"type":"text","data":"# GraphQL Storefront API Example Queries\r\n\r\n<div class=\"otp\" id=\"no-index\">\r\n\r\n### On this Page\r\n\r\n- [Get a Customer's Details](#get-a-customers-details)\r\n- [Get First Three Levels of Category Tree](#get-first-three-levels-of-category-tree)\r\n- [Get Category and Children by URL](#get-category-and-children-by-url)\r\n- [Get Multiple Objects by URL](#get-multiple-objects-by-url)\r\n- [Get Product's Images at Different Resolutions](#get-products-images-at-different-resolutions)\r\n- [Get A Single Product](#get-a-single-product)\r\n- [Get Variant Details as a Product Object](#get-variant-details-as-a-product-object)\r\n- [Get Product Option Details by Product ID](#get-product-option-details-by-product-id)\r\n- [Get Refined Product Object for Given Options](#get-refined-product-object-for-given-options)\r\n\r\n</div>\r\n\r\nBelow are example GraphQL queries for use with the BigCommerce GraphQL Storefront API. The purpose of these examples is to assist developers in getting familiar with the API. For a general overview of it's usage and capabilities, see [GraphQL Storefront API Overview](https://developer.bigcommerce.com/api-docs/storefront/graphql/graphql-storefront-api-overview).\r\n\r\n<a id=\"get-a-customers-details\" class=\"devdocsAnchor\"></a>\r\n\r\n## Get a Customer's Details\r\n\r\n```javascript\r\nquery CustomerAttributes {\r\n  customer {\r\n    firstName\r\n    lastName\r\n    email\r\n    entityId\r\n    customerGroupId\r\n    attributeCount\r\n    attributes {\r\n      shirtSize: attribute(entityId:123) {\r\n        entityId\r\n        value\r\n      }\r\n      favoriteColor: attribute(entityId:456) {\r\n        entityId\r\n        value\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n<a href=\"https://developer.bigcommerce.com/graphql?playground_tab=customerDetails\" target=\"_blank\">**Try it in GraphQL Playground**</a>\r\n**[Try it in GraphQL Playground](https://developer.bigcommerce.com/graphql?playground_tab=customerDetails)**\r\n\r\n## Get First Three Levels of Category Tree\r\n\r\n```javascript\r\nquery CategoryTree3LevelsDeep {\r\n  site {\r\n    categoryTree {\r\n      ...CategoryFields\r\n      children {\r\n        ...CategoryFields\r\n        children {\r\n          ...CategoryFields\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfragment CategoryFields on CategoryTreeItem {\r\n  name\r\n  path\r\n  entityId\r\n}\r\n```\r\n\r\n<a href=\"https://developer.bigcommerce.com/graphql?playground_tab=categoryTree\" target=\"_blank\">**Try it in GraphQL Playground**</a>\r\n\r\n## Get Category and Children by URL\r\n\r\n```javascript\r\nquery CategoryByUrl {\r\n  site {\r\n    route(path: \"/shop-all/\") {\r\n      node {\r\n        id\r\n        ... on Category {\r\n          name\r\n          entityId\r\n          description\r\n          products {\r\n            edges {\r\n              node {\r\n                name\r\n                defaultImage {\r\n                  url(width: 1200)\r\n                }\r\n                brand {\r\n                  name\r\n                  defaultImage {\r\n                    url(width: 200)\r\n                  }\r\n                }\r\n                priceRanges {\r\n                  priceRange {\r\n                    min {\r\n                      ...PriceFields\r\n                    }\r\n                    max {\r\n                      ...PriceFields\r\n                    }\r\n                  }\r\n                }\r\n                prices {\r\n                  price {\r\n                    ...PriceFields\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfragment PriceFields on Money {\r\n  value\r\n  currencyCode\r\n}\r\n```\r\n\r\n<a href=\"https://developer.bigcommerce.com/graphql?playground_tab=categoriesByUrl\" target=\"_blank\">**Try it in GraphQL Playground**</a>\r\n\r\n## Get Multiple Objects by URL\r\n\r\n```js\r\nquery LookUpUrl {\r\n  site {\r\n    route(path: \"/shop-all/\") {\r\n      node {\r\n        __typename\r\n        id\r\n        ... on Category {\r\n          name\r\n          description\r\n        }\r\n        ... on Brand {\r\n          name\r\n          defaultImage {\r\n            url(width: 200)\r\n          }\r\n        }\r\n        ... on Product {\r\n          name\r\n          description\r\n          images {\r\n            edges {\r\n              node {\r\n                url(width: 500, height: 500)\r\n              }\r\n            }\r\n          }\r\n          brand {\r\n            name\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n<a href=\"https://developer.bigcommerce.com/graphql?playground_tab=objectsByUrl\" target=\"_blank\">**Try it in GraphQL Playground**</a>\r\n\r\n## Get Product's Images at Different Resolutions\r\n\r\n```js\r\nquery SrcsetImages {\r\n  site {\r\n    product(entityId: 123) {\r\n      images {\r\n        edges {\r\n          node {\r\n            url320wide: url(width: 320)\r\n            url640wide: url(width: 640)\r\n            url960wide: url(width: 960)\r\n            url1280wide: url(width: 1280)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n<a href=\"https://developer.bigcommerce.com/graphql?playground_tab=productImages\" target=\"_blank\">**Try it in GraphQL Playground**</a>\r\n\r\n## Get A Single Product\r\n\r\n```js\r\nquery SingleProduct {\r\n  site {\r\n    products (entityIds: [4917]) {\r\n      edges {\r\n        node {\r\n          id \r\n          entityId\r\n          name\r\n          prices {\r\n            price {\r\n              value\r\n              currencyCode\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n<a href=\"https://developer.bigcommerce.com/graphql?playground_tab=singleProduct\" target=\"_blank\">**Try it in GraphQL Playground**</a>\r\n\r\n## Get Variant Details as a Product Object \r\n\r\n```js\r\nquery VariantById {\r\n  site {\r\n    product(variantEntityId: 27098) {\r\n      name\r\n      sku\r\n      defaultImage {\r\n        url(width: 500, height: 500)\r\n      }\r\n      prices {\r\n        price {\r\n          ...PriceFields\r\n        }\r\n        salePrice {\r\n          ...PriceFields\r\n        }\r\n        retailPrice {\r\n          ...PriceFields\r\n        }\r\n      }\r\n      width {\r\n        ...DimensionFields\r\n      }\r\n      height {\r\n        ...DimensionFields\r\n      }\r\n      depth {\r\n        ...DimensionFields\r\n      }\r\n    }\r\n  }\r\n}\r\nfragment PriceFields on Money {\r\n  value\r\n  currencyCode\r\n}\r\nfragment DimensionFields on Measurement {\r\n  value\r\n  unit\r\n}\r\n```\r\n\r\n<div class=\"HubBlock--callout\">\r\n<div class=\"CalloutBlock--info\">\r\n<div class=\"HubBlock-content\">\r\n    \r\n<!-- theme: info -->\r\n\r\nThis query returns variant information appropriately overlaid on the Product object. For example, if the variant has a different image, dimensions, SKU, or price, that will be automatically returned -- his allows for directly merchandising particular variants. \r\n\r\n</div>\r\n</div>\r\n</div>\r\n\r\n<a href=\"https://developer.bigcommerce.com/graphql?playground_tab=variantDetails\" target=\"_blank\">**Try it in GraphQL Playground**</a>\r\n\r\n## Get Product Option Details by Product ID\r\n\r\n```js\r\nquery SeveralProductsByID {\r\n  site {\r\n    products(entityIds: [1, 2, 3]) {\r\n      edges {\r\n        node {\r\n          name\r\n          options {\r\n            edges {\r\n              node {\r\n                entityId\r\n                displayName\r\n                isRequired\r\n                values {\r\n                  edges {\r\n                    node {\r\n                      entityId\r\n                      label\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n<a href=\"https://developer.bigcommerce.com/graphql?playground_tab=productOptions\" target=\"_blank\">**Try it in GraphQL Playground**</a>\r\n\r\n## Get Refined Product Object for Given Options\r\n\r\n```js\r\nquery ProductsWithOptionSelections {\r\n  site {\r\n    product123: product(\r\n      entityId: 123\r\n      optionValueIds: [\r\n        { optionEntityId: 4, valueEntityId: 543 }\r\n        { optionEntityId: 5, valueEntityId: 443 }\r\n      ]\r\n    ) {\r\n      ...ProductFields\r\n    }\r\n    product234: product(\r\n      entityId: 234\r\n      optionValueIds: [\r\n        { optionEntityId: 8, valueEntityId: 768 }\r\n        { optionEntityId: 13, valueEntityId: 883 }\r\n      ]\r\n    ) {\r\n      ...ProductFields\r\n    }\r\n  }\r\n}\r\n\r\nfragment ProductFields on Product {\r\n  name\r\n  defaultImage {\r\n    url(width: 1000)\r\n  }\r\n  sku\r\n  availability\r\n}\r\n```\r\n\r\n<a href=\"https://developer.bigcommerce.com/graphql?playground_tab=refinedProduct\" target=\"_blank\">**Try it in GraphQL Playground**</a>"}],"children":[]}}}}
